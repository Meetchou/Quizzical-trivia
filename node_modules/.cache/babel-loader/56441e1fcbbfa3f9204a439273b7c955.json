{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/react/freeCodeCampReactCourse/quizzical-trivia/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from \"react\";\nimport Question from './components/Question';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [questions, setQuestions] = React.useState([]);\n  const [questionsElements, setQuestionsElements] = React.useState([]);\n  const [answers, setAnswers] = React.useState([]);\n\n  async function generateQuestions() {\n    const res = await fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\");\n    const data = await res.json();\n    console.log(data.results);\n    setQuestions(data.results);\n  }\n\n  function createAnswersTab(question) {\n    const answersTab = question.incorrect_answers;\n    answersTab.push(question.correct_answer);\n    setAnswers(answersTab.map(elem => ({\n      id: nanoid(),\n      answer: elem,\n      isSelected: false\n    })));\n  }\n\n  function selectAnswer(id) {\n    setAnswers(prevAnswers => prevAnswers.map(answer => {\n      return answer.id === id ? { ...answer,\n        isSelected: true\n      } : { ...answer,\n        isSelected: false\n      };\n    }));\n  }\n\n  React.useEffect(() => {\n    setQuestionsElements(questions.map(question => {\n      createAnswersTab(question);\n      return /*#__PURE__*/_jsxDEV(Question, {\n        question: question,\n        answers: answers,\n        handleClick: selectAnswer\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this);\n    }));\n  }, [questions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [questions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"home-title\",\n        children: \"Quizzical\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"home-descrption\",\n        children: \"Some description if needed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateQuestions,\n        className: \"button-start\",\n        children: \"Start quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quizz-page\",\n      children: questionsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"R3MZ/1aGJIsdZLAwsqnkbl1euP8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Question","nanoid","App","questions","setQuestions","useState","questionsElements","setQuestionsElements","answers","setAnswers","generateQuestions","res","fetch","data","json","console","log","results","createAnswersTab","question","answersTab","incorrect_answers","push","correct_answer","map","elem","id","answer","isSelected","selectAnswer","prevAnswers","useEffect","length"],"sources":["/Users/mac/Documents/react/freeCodeCampReactCourse/quizzical-trivia/src/App.js"],"sourcesContent":["import './App.css';\nimport React from \"react\"\nimport Question from './components/Question';\nimport { nanoid } from 'nanoid'\nfunction App() \n{\n\tconst [questions, setQuestions] = React.useState([])\n\tconst [questionsElements, setQuestionsElements] = React.useState([])\n\tconst [answers, setAnswers] = React.useState([])\n\tasync function generateQuestions()\n\t{\n\t\tconst res = await fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\")\n\t\tconst data = await res.json()\n\t\tconsole.log(data.results)\n\t\tsetQuestions(data.results)\n\t}\n\n\tfunction createAnswersTab (question) {\n\t\tconst answersTab = question.incorrect_answers\n\t\tanswersTab.push(question.correct_answer)\n\t\tsetAnswers(answersTab.map((elem) => ({\n\t\t\tid : nanoid(),\n\t\t\tanswer : elem,\n\t\t\tisSelected : false \n\t\t})))\n\t}\n\n\tfunction selectAnswer (id)\n\t{\n\t\tsetAnswers((prevAnswers) => (prevAnswers.map((answer) => {\n\t\t\treturn answer.id === id ?\n\t\t\t\t{ ...answer, isSelected : true} :\n\t\t\t\t{ ...answer, isSelected : false}\n\t\t})))\n\t}\n\n\tReact.useEffect(() => {\n\t\tsetQuestionsElements(questions.map(question => {\n\t\t\tcreateAnswersTab(question)\n\t\t\treturn <Question key={nanoid()} question={question} \n\t\t\tanswers={answers} handleClick={selectAnswer}></Question>\n\t\t}\n\t\t\t\n\t\t\t))\n\t}, [questions])\n\treturn (\n\t\t<div className=\"App\">\n\t\t{\n\t\t\tquestions.length === 0 ?\n\t\t\t\t<div className='home-page'>\n\t\t\t\t\t<h1 className='home-title'>Quizzical</h1>\n\t\t\t\t\t<p className='home-descrption'>Some description if needed</p>\n\t\t\t\t\t<button onClick={generateQuestions} className='button-start'>Start quiz</button>\n\t\t\t\t</div> :\n\t\t\t\t<div className='quizz-page'>\n\t\t\t\t\t{questionsElements}\n\t\t\t\t</div>\n\n\t\t}\n\t\t\t<div>\n\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AACA,SAASC,GAAT,GACA;EAAA;;EACC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAlC;EACA,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CR,KAAK,CAACM,QAAN,CAAe,EAAf,CAAlD;EACA,MAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBV,KAAK,CAACM,QAAN,CAAe,EAAf,CAA9B;;EACA,eAAeK,iBAAf,GACA;IACC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oDAAD,CAAvB;IACA,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;IACAC,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,OAAjB;IACAb,YAAY,CAACS,IAAI,CAACI,OAAN,CAAZ;EACA;;EAED,SAASC,gBAAT,CAA2BC,QAA3B,EAAqC;IACpC,MAAMC,UAAU,GAAGD,QAAQ,CAACE,iBAA5B;IACAD,UAAU,CAACE,IAAX,CAAgBH,QAAQ,CAACI,cAAzB;IACAd,UAAU,CAACW,UAAU,CAACI,GAAX,CAAgBC,IAAD,KAAW;MACpCC,EAAE,EAAGzB,MAAM,EADyB;MAEpC0B,MAAM,EAAGF,IAF2B;MAGpCG,UAAU,EAAG;IAHuB,CAAX,CAAf,CAAD,CAAV;EAKA;;EAED,SAASC,YAAT,CAAuBH,EAAvB,EACA;IACCjB,UAAU,CAAEqB,WAAD,IAAkBA,WAAW,CAACN,GAAZ,CAAiBG,MAAD,IAAY;MACxD,OAAOA,MAAM,CAACD,EAAP,KAAcA,EAAd,GACN,EAAE,GAAGC,MAAL;QAAaC,UAAU,EAAG;MAA1B,CADM,GAEN,EAAE,GAAGD,MAAL;QAAaC,UAAU,EAAG;MAA1B,CAFD;IAGA,CAJ4B,CAAnB,CAAV;EAKA;;EAED7B,KAAK,CAACgC,SAAN,CAAgB,MAAM;IACrBxB,oBAAoB,CAACJ,SAAS,CAACqB,GAAV,CAAcL,QAAQ,IAAI;MAC9CD,gBAAgB,CAACC,QAAD,CAAhB;MACA,oBAAO,QAAC,QAAD;QAAyB,QAAQ,EAAEA,QAAnC;QACP,OAAO,EAAEX,OADF;QACW,WAAW,EAAEqB;MADxB,GAAe5B,MAAM,EAArB;QAAA;QAAA;QAAA;MAAA,QAAP;IAEA,CAJoB,CAAD,CAApB;EAOA,CARD,EAQG,CAACE,SAAD,CARH;EASA,oBACC;IAAK,SAAS,EAAC,KAAf;IAAA,WAECA,SAAS,CAAC6B,MAAV,KAAqB,CAArB,gBACC;MAAK,SAAS,EAAC,WAAf;MAAA,wBACC;QAAI,SAAS,EAAC,YAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,eAEC;QAAG,SAAS,EAAC,iBAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFD,eAGC;QAAQ,OAAO,EAAEtB,iBAAjB;QAAoC,SAAS,EAAC,cAA9C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHD;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,gBAMC;MAAK,SAAS,EAAC,YAAf;MAAA,UACEJ;IADF;MAAA;MAAA;MAAA;IAAA,QARF,eAaC;MAAA;MAAA;MAAA;IAAA,QAbD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAmBA;;GA5DQJ,G;;KAAAA,G;AA8DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}