{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/react/freeCodeCampReactCourse/quizzical-trivia/src/components/Question.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  _s();\n\n  const [answers, setAnswers] = React.useState([]);\n\n  function createAnswersTab(question) {\n    const answersTab = question.incorrect_answers;\n    answersTab.push(question.correct_answer);\n    setAnswers(answersTab.map(elem => ({\n      id: nanoid(),\n      answer: elem,\n      isSelected: false\n    })));\n  }\n\n  React.useEffect(() => {\n    createAnswersTab(props.question);\n  }, [props.question]);\n\n  function selectAnswer(id) {\n    setAnswers(prevAnswers => prevAnswers.map(answer => {\n      return answer.id === id ? { ...answer,\n        isSelected: true\n      } : { ...answer,\n        isSelected: false\n      };\n    }));\n  }\n\n  const style = {\n    backgroundColor: \"#293264\"\n  };\n  const answersElements = answers.map(elem => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: elem.isSelected ? style : {},\n    onClick: () => selectAnswer(elem.id),\n    className: \"answers-button\",\n    children: elem.answer\n  }, elem.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"question-title\",\n      children: props.question.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers-container\",\n      children: answersElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Question, \"dxes/kRl333RWxkLpEqHu4XKyWs=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","nanoid","Question","props","answers","setAnswers","useState","createAnswersTab","question","answersTab","incorrect_answers","push","correct_answer","map","elem","id","answer","isSelected","useEffect","selectAnswer","prevAnswers","style","backgroundColor","answersElements"],"sources":["/Users/mac/Documents/react/freeCodeCampReactCourse/quizzical-trivia/src/components/Question.js"],"sourcesContent":["import React from \"react\"\nimport {nanoid} from 'nanoid'\n\nexport default function Question (props) {\n\tconst [answers, setAnswers] = React.useState([])\n\n\tfunction createAnswersTab(question) {\n\t\tconst answersTab = question.incorrect_answers\n\t\tanswersTab.push(question.correct_answer)\n\t\tsetAnswers(answersTab.map((elem) => ({\n\t\t\tid : nanoid(),\n\t\t\tanswer : elem,\n\t\t\tisSelected : false \n\t\t})))\n\n\t}\n\n\tReact.useEffect(() => {\n\t\tcreateAnswersTab(props.question)\n\t}, [props.question])\n\n\tfunction selectAnswer(id)\n\t{\n\t\tsetAnswers((prevAnswers) => (prevAnswers.map((answer) => {\n\t\t\treturn answer.id === id ?\n\t\t\t\t{ ...answer, isSelected : true} :\n\t\t\t\t{ ...answer, isSelected : false}\n\t\t})))\n\t}\n\n\tconst style  = {\n\t\tbackgroundColor : \"#293264\"\n\t}\n\t\n\tconst answersElements = answers.map( (elem) =>\n\t\t<div style={elem.isSelected ? style : {}} \n\t\tonClick={() => selectAnswer(elem.id)} \n\t\tclassName=\"answers-button\" key={elem.id}>\n\t\t\t{elem.answer}\n\t\t</div>\n\t)\n\treturn (\n\t\t<div className=\"question-container\">\n\t\t\t<h2 className=\"question-title\" >{props.question.question}</h2>\n\t\t\t<div className=\"answers-container\">{answersElements}</div>\n\t\t</div>\n\t\t\n\n\t)\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;;AAEA,eAAe,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;EAAA;;EACxC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,KAAK,CAACM,QAAN,CAAe,EAAf,CAA9B;;EAEA,SAASC,gBAAT,CAA0BC,QAA1B,EAAoC;IACnC,MAAMC,UAAU,GAAGD,QAAQ,CAACE,iBAA5B;IACAD,UAAU,CAACE,IAAX,CAAgBH,QAAQ,CAACI,cAAzB;IACAP,UAAU,CAACI,UAAU,CAACI,GAAX,CAAgBC,IAAD,KAAW;MACpCC,EAAE,EAAGd,MAAM,EADyB;MAEpCe,MAAM,EAAGF,IAF2B;MAGpCG,UAAU,EAAG;IAHuB,CAAX,CAAf,CAAD,CAAV;EAMA;;EAEDjB,KAAK,CAACkB,SAAN,CAAgB,MAAM;IACrBX,gBAAgB,CAACJ,KAAK,CAACK,QAAP,CAAhB;EACA,CAFD,EAEG,CAACL,KAAK,CAACK,QAAP,CAFH;;EAIA,SAASW,YAAT,CAAsBJ,EAAtB,EACA;IACCV,UAAU,CAAEe,WAAD,IAAkBA,WAAW,CAACP,GAAZ,CAAiBG,MAAD,IAAY;MACxD,OAAOA,MAAM,CAACD,EAAP,KAAcA,EAAd,GACN,EAAE,GAAGC,MAAL;QAAaC,UAAU,EAAG;MAA1B,CADM,GAEN,EAAE,GAAGD,MAAL;QAAaC,UAAU,EAAG;MAA1B,CAFD;IAGA,CAJ4B,CAAnB,CAAV;EAKA;;EAED,MAAMI,KAAK,GAAI;IACdC,eAAe,EAAG;EADJ,CAAf;EAIA,MAAMC,eAAe,GAAGnB,OAAO,CAACS,GAAR,CAAcC,IAAD,iBACpC;IAAK,KAAK,EAAEA,IAAI,CAACG,UAAL,GAAkBI,KAAlB,GAA0B,EAAtC;IACA,OAAO,EAAE,MAAMF,YAAY,CAACL,IAAI,CAACC,EAAN,CAD3B;IAEA,SAAS,EAAC,gBAFV;IAAA,UAGED,IAAI,CAACE;EAHP,GAEgCF,IAAI,CAACC,EAFrC;IAAA;IAAA;IAAA;EAAA,QADuB,CAAxB;EAOA,oBACC;IAAK,SAAS,EAAC,oBAAf;IAAA,wBACC;MAAI,SAAS,EAAC,gBAAd;MAAA,UAAiCZ,KAAK,CAACK,QAAN,CAAeA;IAAhD;MAAA;MAAA;MAAA;IAAA,QADD,eAEC;MAAK,SAAS,EAAC,mBAAf;MAAA,UAAoCe;IAApC;MAAA;MAAA;MAAA;IAAA,QAFD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAQA;;GA9CuBrB,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}